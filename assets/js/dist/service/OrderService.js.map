{"version":3,"sources":["../../src/service/OrderService.js"],"names":["HttpService","ConnectionFactory","OrderDao","Order","OrderService","_http","order","getConnection","then","connection","dao","add","catch","console","log","error","Error","delete","load","currentOrders","getAllOrders","orders","filter","some","equals","current","Promise","all","getWeekOrders","getLastWeekOrders","getOrdersFromTwoWeeksAgo","response","reduce","acc","concat","get","map","Date","date","amount","price"],"mappings":"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","file":"OrderService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {OrderDao} from '../dao/OrderDao';\nimport {Order} from '../model/Order';\n\nexport class OrderService {\n\n    constructor() {\n\n        this._http = new HttpService();\n    }\n\n    add(order) {\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new OrderDao(connection))\n            .then(dao => dao.add(order))\n            .then(() => 'Order added.')\n            .catch(error => {\n                console.log(error);\n                throw new Error('Order cannot be added.');\n            });\n    }\n\n    delete() {\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new OrderDao(connection))\n            .then(dao => dao.delete())\n            .then(() => 'Orders deleted.')\n            .catch(error => {\n                throw new Error('Order cannot be deleted.');\n            });\n    }\n\n    load() {\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new OrderDao(connection))\n            .then(dao => dao.load())\n            .catch(error => {\n                throw new Error('Orders cannot be loaded.');\n            });\n    }\n\n    import(currentOrders) {\n\n        return this.getAllOrders()                        \n            .then(orders =>\n                orders.filter(order =>\n                    !currentOrders.some(current => order.equals(current))))\n            .catch(error => {\n                throw new Error('Orders cannot be imported.');\n            });\n    }\n\n    getAllOrders() {\n\n        return Promise.all([\n            this.getWeekOrders(),\n            this.getLastWeekOrders(),\n            this.getOrdersFromTwoWeeksAgo()\n        ])\n        .then(response =>\n            response.reduce((acc, current) => acc.concat(current), []))\n        .catch(error => {\n            throw new Error(error);\n        });\n    }\n\n    getWeekOrders() {\n\n        return this._http\n            .get('/orders/week')\n            .then(orders => orders.map(order =>                \n                new Order(new Date(order.date), order.amount, order.price)))\n            .catch(error => {\n                throw new Error(error);\n            });\n    }\n\n    getLastWeekOrders() {\n\n        return this._http\n            .get('/orders/last-week')\n            .then(orders => orders.map(order =>                \n                new Order(new Date(order.date), order.amount, order.price)))\n            .catch(error => {\n                throw new Error(error);\n            });\n    }\n\n    getOrdersFromTwoWeeksAgo() {\n\n        return this._http\n            .get('/orders/two-weeks-ago')\n            .then(orders => orders.map(order =>                \n                new Order(new Date(order.date), order.amount, order.price)))\n            .catch(error => {\n                throw new Error(error);\n            });\n    }\n}"]}